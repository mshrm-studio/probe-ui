export const nounsDreamContractABI = [
    {
        inputs: [
            {
                internalType: 'contract INounsDescriptorMinimal',
                name: 'nounsDescriptor',
                type: 'address',
            },
            {
                internalType: 'contract IERC721Enumerable',
                name: 'nounToken',
                type: 'address',
            },
            {
                internalType: 'contract INounsSeeder',
                name: 'nounsSeeder',
                type: 'address',
            },
            {
                internalType: 'contract INounsAuctionHouseV2',
                name: 'nounsAuctionHouse',
                type: 'address',
            },
            {
                internalType: 'address payable',
                name: 'spawnManager',
                type: 'address',
            },
            {
                internalType: 'address',
                name: 'nounsDaoOwnerAddress',
                type: 'address',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'constructor',
    },
    { inputs: [], name: 'AccessControlBadConfirmation', type: 'error' },
    {
        inputs: [
            { internalType: 'address', name: 'account', type: 'address' },
            { internalType: 'bytes32', name: 'neededRole', type: 'bytes32' },
        ],
        name: 'AccessControlUnauthorizedAccount',
        type: 'error',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'uint256',
                name: 'dreamNounIndex',
                type: 'uint256',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'sender',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'depositPaid',
                type: 'uint256',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'timestamp',
                type: 'uint256',
            },
        ],
        name: 'DreamNounQueued',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'uint256',
                name: 'dreamNounIndex',
                type: 'uint256',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'blockNumber',
                type: 'uint256',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'owner',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'string',
                name: 'nounSeedKey',
                type: 'string',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'timestamp',
                type: 'uint256',
            },
        ],
        name: 'DreamNounSpawned',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'uint256',
                name: 'oldMinimumDeposit',
                type: 'uint256',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'newMinimumDeposit',
                type: 'uint256',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'sender',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'timestamp',
                type: 'uint256',
            },
        ],
        name: 'MinimumDepositUpdated',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'oldNounsAuctionHouseAddress',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'newNounsAuctionHouseAddress',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'timestamp',
                type: 'uint256',
            },
        ],
        name: 'NounsAuctionHouseUpdated',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'oldNounsDescriptorMinimalAddress',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'newNounsDescriptorMinimalAddress',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'timestamp',
                type: 'uint256',
            },
        ],
        name: 'NounsDescriptorMinimalUpdated',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'previousOwner',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'OwnershipTransferred',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'bytes32',
                name: 'role',
                type: 'bytes32',
            },
            {
                indexed: true,
                internalType: 'bytes32',
                name: 'previousAdminRole',
                type: 'bytes32',
            },
            {
                indexed: true,
                internalType: 'bytes32',
                name: 'newAdminRole',
                type: 'bytes32',
            },
        ],
        name: 'RoleAdminChanged',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'bytes32',
                name: 'role',
                type: 'bytes32',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'account',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'sender',
                type: 'address',
            },
        ],
        name: 'RoleGranted',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'bytes32',
                name: 'role',
                type: 'bytes32',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'account',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'sender',
                type: 'address',
            },
        ],
        name: 'RoleRevoked',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'fromAddress',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'spawnManagerAddress',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'timestamp',
                type: 'uint256',
            },
        ],
        name: 'SpawnManagerSentDeposit',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'oldSpawnManagerAddress',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'newSpawnManagerAddress',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'timestamp',
                type: 'uint256',
            },
        ],
        name: 'SpawnManagerUpdated',
        type: 'event',
    },
    {
        inputs: [],
        name: 'DEFAULT_ADMIN_ROLE',
        outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'UPDATE_MINIMUM_DEPOSIT_AMOUNT_ROLE',
        outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        name: '_dreamNouns',
        outputs: [
            { internalType: 'uint48', name: 'Background', type: 'uint48' },
            { internalType: 'bool', name: 'IncludeBackground', type: 'bool' },
            { internalType: 'uint48', name: 'Body', type: 'uint48' },
            { internalType: 'bool', name: 'IncludeBody', type: 'bool' },
            { internalType: 'uint48', name: 'Accessory', type: 'uint48' },
            { internalType: 'bool', name: 'IncludeAccessory', type: 'bool' },
            { internalType: 'uint48', name: 'Head', type: 'uint48' },
            { internalType: 'bool', name: 'IncludeHead', type: 'bool' },
            { internalType: 'uint48', name: 'Glasses', type: 'uint48' },
            { internalType: 'bool', name: 'IncludeGlasses', type: 'bool' },
            { internalType: 'uint256', name: 'Deposit', type: 'uint256' },
            { internalType: 'uint256', name: 'SpawnedAt', type: 'uint256' },
            { internalType: 'address', name: 'Owner', type: 'address' },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: '_spawnManager',
        outputs: [
            { internalType: 'address payable', name: '', type: 'address' },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'string', name: '', type: 'string' }],
        name: '_traitKeyToNounIndexes',
        outputs: [
            { internalType: 'bool', name: 'Exists', type: 'bool' },
            { internalType: 'uint256', name: 'Index', type: 'uint256' },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            { internalType: 'address', name: '', type: 'address' },
            { internalType: 'uint256', name: '', type: 'uint256' },
        ],
        name: '_userDreamNounIndexes',
        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'uint48',
                        name: 'Background',
                        type: 'uint48',
                    },
                    {
                        internalType: 'bool',
                        name: 'IncludeBackground',
                        type: 'bool',
                    },
                    { internalType: 'uint48', name: 'Body', type: 'uint48' },
                    { internalType: 'bool', name: 'IncludeBody', type: 'bool' },
                    {
                        internalType: 'uint48',
                        name: 'Accessory',
                        type: 'uint48',
                    },
                    {
                        internalType: 'bool',
                        name: 'IncludeAccessory',
                        type: 'bool',
                    },
                    { internalType: 'uint48', name: 'Head', type: 'uint48' },
                    { internalType: 'bool', name: 'IncludeHead', type: 'bool' },
                    { internalType: 'uint48', name: 'Glasses', type: 'uint48' },
                    {
                        internalType: 'bool',
                        name: 'IncludeGlasses',
                        type: 'bool',
                    },
                ],
                internalType: 'struct IDreamNouns.DreamNounRequest',
                name: 'dreamNounRequest',
                type: 'tuple',
            },
        ],
        name: 'addDreamNoun',
        outputs: [],
        stateMutability: 'payable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'getDreamNounMatch',
        outputs: [
            {
                components: [
                    { internalType: 'bool', name: 'HasMatched', type: 'bool' },
                    {
                        internalType: 'uint256',
                        name: 'BlockNumber',
                        type: 'uint256',
                    },
                    {
                        internalType: 'string',
                        name: 'NounTraitsKey',
                        type: 'string',
                    },
                    {
                        internalType: 'uint256',
                        name: 'DreamNounIndex',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint48',
                        name: 'Background',
                        type: 'uint48',
                    },
                    { internalType: 'uint48', name: 'Body', type: 'uint48' },
                    {
                        internalType: 'uint48',
                        name: 'Accessory',
                        type: 'uint48',
                    },
                    { internalType: 'uint48', name: 'Head', type: 'uint48' },
                    { internalType: 'uint48', name: 'Glasses', type: 'uint48' },
                ],
                internalType: 'struct IDreamNouns.MatchedDreamNounResponse',
                name: 'matchedDreamNounResponse',
                type: 'tuple',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'uint48',
                        name: 'Background',
                        type: 'uint48',
                    },
                    {
                        internalType: 'bool',
                        name: 'IncludeBackground',
                        type: 'bool',
                    },
                    { internalType: 'uint48', name: 'Body', type: 'uint48' },
                    { internalType: 'bool', name: 'IncludeBody', type: 'bool' },
                    {
                        internalType: 'uint48',
                        name: 'Accessory',
                        type: 'uint48',
                    },
                    {
                        internalType: 'bool',
                        name: 'IncludeAccessory',
                        type: 'bool',
                    },
                    { internalType: 'uint48', name: 'Head', type: 'uint48' },
                    { internalType: 'bool', name: 'IncludeHead', type: 'bool' },
                    { internalType: 'uint48', name: 'Glasses', type: 'uint48' },
                    {
                        internalType: 'bool',
                        name: 'IncludeGlasses',
                        type: 'bool',
                    },
                ],
                internalType: 'struct IDreamNouns.DreamNounRequest',
                name: 'nounDefinition',
                type: 'tuple',
            },
        ],
        name: 'getDreamProbability',
        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            { internalType: 'bool', name: 'includeBackground', type: 'bool' },
            { internalType: 'uint48', name: 'background', type: 'uint48' },
            { internalType: 'bool', name: 'includeBody', type: 'bool' },
            { internalType: 'uint48', name: 'body', type: 'uint48' },
            { internalType: 'bool', name: 'includeAccessory', type: 'bool' },
            { internalType: 'uint48', name: 'accessory', type: 'uint48' },
            { internalType: 'bool', name: 'includeHead', type: 'bool' },
            { internalType: 'uint48', name: 'head', type: 'uint48' },
            { internalType: 'bool', name: 'includeGlasses', type: 'bool' },
            { internalType: 'uint48', name: 'glasses', type: 'uint48' },
        ],
        name: 'getNounTraitsKey',
        outputs: [{ internalType: 'string', name: '', type: 'string' }],
        stateMutability: 'pure',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'bytes32', name: 'role', type: 'bytes32' }],
        name: 'getRoleAdmin',
        outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'getSeedForCurrentBlock',
        outputs: [
            {
                components: [
                    {
                        internalType: 'uint48',
                        name: 'background',
                        type: 'uint48',
                    },
                    { internalType: 'uint48', name: 'body', type: 'uint48' },
                    {
                        internalType: 'uint48',
                        name: 'accessory',
                        type: 'uint48',
                    },
                    { internalType: 'uint48', name: 'head', type: 'uint48' },
                    { internalType: 'uint48', name: 'glasses', type: 'uint48' },
                ],
                internalType: 'struct INounsSeeder.Seed',
                name: 'seed',
                type: 'tuple',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'getTotalDreamNouns',
        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'address', name: 'user', type: 'address' }],
        name: 'getUsersTotalDreamNouns',
        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            { internalType: 'bytes32', name: 'role', type: 'bytes32' },
            { internalType: 'address', name: 'account', type: 'address' },
        ],
        name: 'grantRole',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            { internalType: 'bytes32', name: 'role', type: 'bytes32' },
            { internalType: 'address', name: 'account', type: 'address' },
        ],
        name: 'hasRole',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'uint48',
                        name: 'Background',
                        type: 'uint48',
                    },
                    {
                        internalType: 'bool',
                        name: 'IncludeBackground',
                        type: 'bool',
                    },
                    { internalType: 'uint48', name: 'Body', type: 'uint48' },
                    { internalType: 'bool', name: 'IncludeBody', type: 'bool' },
                    {
                        internalType: 'uint48',
                        name: 'Accessory',
                        type: 'uint48',
                    },
                    {
                        internalType: 'bool',
                        name: 'IncludeAccessory',
                        type: 'bool',
                    },
                    { internalType: 'uint48', name: 'Head', type: 'uint48' },
                    { internalType: 'bool', name: 'IncludeHead', type: 'bool' },
                    { internalType: 'uint48', name: 'Glasses', type: 'uint48' },
                    {
                        internalType: 'bool',
                        name: 'IncludeGlasses',
                        type: 'bool',
                    },
                    {
                        internalType: 'uint256',
                        name: 'Deposit',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint256',
                        name: 'SpawnedAt',
                        type: 'uint256',
                    },
                    { internalType: 'address', name: 'Owner', type: 'address' },
                ],
                internalType: 'struct IDreamNouns.DreamNoun',
                name: 'dreamNoun',
                type: 'tuple',
            },
        ],
        name: 'isDreamNounQueued',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'isNounOClock',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'owner',
        outputs: [{ internalType: 'address', name: '', type: 'address' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'populateSelectionPermutations',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'renounceOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            { internalType: 'bytes32', name: 'role', type: 'bytes32' },
            {
                internalType: 'address',
                name: 'callerConfirmation',
                type: 'address',
            },
        ],
        name: 'renounceRole',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            { internalType: 'bytes32', name: 'role', type: 'bytes32' },
            { internalType: 'address', name: 'account', type: 'address' },
        ],
        name: 'revokeRole',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'minimumDeposit',
                type: 'uint256',
            },
        ],
        name: 'setMinimumDeposit',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'contract INounsAuctionHouseV2',
                name: 'nounsAuctionHouse',
                type: 'address',
            },
        ],
        name: 'setNounsAuctionHouse',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'contract INounsDescriptorMinimal',
                name: 'nounsDescriptorMinimal',
                type: 'address',
            },
        ],
        name: 'setNounsMinimalDescriptor',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address payable',
                name: 'spawnManager',
                type: 'address',
            },
        ],
        name: 'setSpawnManager',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            { internalType: 'uint256', name: 'blockNumber', type: 'uint256' },
            { internalType: 'string', name: 'nounTraitsKey', type: 'string' },
        ],
        name: 'spawnDreamNoun',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            { internalType: 'bytes4', name: 'interfaceId', type: 'bytes4' },
        ],
        name: 'supportsInterface',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            { internalType: 'address', name: 'newOwner', type: 'address' },
        ],
        name: 'transferOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
]
